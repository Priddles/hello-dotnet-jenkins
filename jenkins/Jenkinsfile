pipeline {
  agent any

  stages {
    stage('Build') {
      steps {
        sh 'dotnet build'
      }
    }

    stage('Unit Tests') {
      steps {
        sh 'dotnet test --logger:xunit'
      }

      post {
        always {
          xunit(tools: [xUnitDotNet(pattern: '**/TestResults/*.xml')])
        }
      }
    }

    stage('Staging') {
      environment {
        APP_NAME = 'HelloMvcStaging'
        SERVICE_NAME = 'hellomvc-staging'
      }

      stages {
        stage('Publish Application') {
          steps {
            sh "sudo rm -fr /opt/${APP_NAME}"
            sh "sudo dotnet publish HelloMvc --configuration Debug --output /opt/${APP_NAME}"
          }
        }

        stage('Configure Service') {
          steps {
            sh "echo 'DOTNET_APP_DLL=/opt/${APP_NAME}/HelloMvc.dll' >/etc/dotnet/${SERVICE_NAME}.conf"
            sh "echo 'ASPNETCORE_ENVIRONMENT=Staging' >>/etc/dotnet/${SERVICE_NAME}.conf"

            sh "sudo chkconfig --del ${SERVICE_NAME}"
            sh "sudo cp -f ./jenkins/scripts/dotnet_service /etc/init.d/${SERVICE_NAME}"
            sh "sudo chmod +x /etc/init.d/${SERVICE_NAME}"
            sh "sudo chkconfig --add ${SERVICE_NAME}"
          }
        }
      }
    }

    stage('Deploy') {
      agent {
        label 'master'
      }

      when {
        beforeInput true
        beforeAgent true
        tag 'release-*'
      }

      input {
        message "Deploy ${env.TAG_NAME} to production servers?"
      }

      environment {
        APP_NAME = 'HelloMvcProduction'
        SERVICE_NAME = 'hellomvc-production'
      }

      // TODO: Duplicate code in stage 'Staging'. Should be extracted into a script.
      stages {
        stage('Publish Application') {
          steps {
            sh "sudo rm -fr /opt/${APP_NAME}"
            sh "sudo dotnet publish HelloMvc --configuration Release --output /opt/${APP_NAME}"
          }
        }

        stage('Configure Service') {
          steps {
            sh "echo 'DOTNET_APP_DLL=/opt/${APP_NAME}/HelloMvc.dll' >/etc/dotnet/${SERVICE_NAME}.conf"
            sh "echo 'ASPNETCORE_ENVIRONMENT=Production' >>/etc/dotnet/${SERVICE_NAME}.conf"

            sh "sudo chkconfig --del ${SERVICE_NAME}"
            sh "sudo cp -f ./jenkins/scripts/dotnet_service /etc/init.d/${SERVICE_NAME}"
            sh "sudo chmod +x /etc/init.d/${SERVICE_NAME}"
            sh "sudo chkconfig --add ${SERVICE_NAME}"
          }
        }
      }
    }
  }
}
